{"id":"node_modules/build-docs/lib/params.js","dependencies":[{"name":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/package.json","includedInParent":true,"mtime":1561360128787},{"name":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/package.json","includedInParent":true,"mtime":1561360126173},{"name":"./set-type","loc":{"line":9,"column":24},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/params.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/set-type.js"}],"generated":{"js":"// Matches:\n// {string} name - Name of the user\n// {string} name Name of the user\n// {string[]} interests - Interests of the user\n// {string} address.street - Street of the user\n// {string} favouriteFoods[].cuisine - Name of the cuisine\nconst PARAM = /^{(.*)}\\s+(\\w+(?:(?:\\[\\])*\\.\\w+)*)(?:=(\"[\\s\\S]+\"|[\\S]+)?)?[\\s-]+([\\s\\S]+)$/;\n\nconst setType = require('./set-type');\n\nmodule.exports = function parseParams(params) {\n  return params.map((param) => {\n    const matches = param.match(PARAM);\n\n    const docs = { title: matches[2], description: matches[4] };\n    if (matches[3]) {\n      // strip out extra \"\" in exampleData\n      if (matches[3].startsWith('\"')) {\n        docs.exampleData = matches[3].slice(1, -1);\n      } else {\n        docs.exampleData = matches[3];\n      }\n    }\n\n    return setType(matches[1], docs);\n  }).map((param) => {\n    if (param.type === 'object' || (param.items && param.items.type === 'object')) {\n      throw new Error('Invalid Param - Nested objects are not supported.');\n    }\n    return param;\n  })\n  // Strip out falsy values\n  .filter(Boolean);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/build-docs/lib/params.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/build-docs/lib/params.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/build-docs/lib/params.js":"// Matches:\n// {string} name - Name of the user\n// {string} name Name of the user\n// {string[]} interests - Interests of the user\n// {string} address.street - Street of the user\n// {string} favouriteFoods[].cuisine - Name of the cuisine\nconst PARAM = /^{(.*)}\\s+(\\w+(?:(?:\\[\\])*\\.\\w+)*)(?:=(\"[\\s\\S]+\"|[\\S]+)?)?[\\s-]+([\\s\\S]+)$/;\n\nconst setType = require('./set-type');\n\nmodule.exports = function parseParams(params) {\n  return params.map((param) => {\n    const matches = param.match(PARAM);\n\n    const docs = { title: matches[2], description: matches[4] };\n    if (matches[3]) {\n      // strip out extra \"\" in exampleData\n      if (matches[3].startsWith('\"')) {\n        docs.exampleData = matches[3].slice(1, -1);\n      } else {\n        docs.exampleData = matches[3];\n      }\n    }\n\n    return setType(matches[1], docs);\n  }).map((param) => {\n    if (param.type === 'object' || (param.items && param.items.type === 'object')) {\n      throw new Error('Invalid Param - Nested objects are not supported.');\n    }\n    return param;\n  })\n  // Strip out falsy values\n  .filter(Boolean);\n};\n"},"lineCount":35}},"error":null,"hash":"8f2eeb28ccc717658e7948f6adf8ec88","cacheData":{"env":{}}}