{"id":"node_modules/build-docs/parse-directory.js","dependencies":[{"name":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/package.json","includedInParent":true,"mtime":1561360128787},{"name":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/package.json","includedInParent":true,"mtime":1561360126173},{"name":"fs","loc":{"line":1,"column":19},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/parse-directory.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"path","loc":{"line":2,"column":35},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/parse-directory.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/path-browserify/index.js"},{"name":"./","loc":{"line":4,"column":26},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/parse-directory.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js"}],"generated":{"js":"const fs = require('fs');\nconst { basename, join } = require('path');\n\nconst buildDocs = require('./');\n\nmodule.exports = (directory) => {\n  return fs.readdirSync(directory)\n    .filter(file => file.endsWith('.js'))\n    .map(file => buildDocs(fs.readFileSync(join(directory, file), 'utf8'), basename(file, '.js')));\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/build-docs/parse-directory.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/build-docs/parse-directory.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}}],"sources":{"node_modules/build-docs/parse-directory.js":"const fs = require('fs');\nconst { basename, join } = require('path');\n\nconst buildDocs = require('./');\n\nmodule.exports = (directory) => {\n  return fs.readdirSync(directory)\n    .filter(file => file.endsWith('.js'))\n    .map(file => buildDocs(fs.readFileSync(join(directory, file), 'utf8'), basename(file, '.js')));\n};\n"},"lineCount":11}},"error":null,"hash":"226a14627a0f6c79db0c0318f844437b","cacheData":{"env":{}}}