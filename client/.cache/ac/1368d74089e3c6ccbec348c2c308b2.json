{"id":"node_modules/build-docs/index.js","dependencies":[{"name":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/package.json","includedInParent":true,"mtime":1561360128787},{"name":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/package.json","includedInParent":true,"mtime":1561360126173},{"name":"comments-parser","loc":{"line":1,"column":31},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/comments-parser/index.js"},{"name":"./lib/description","loc":{"line":2,"column":33},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/description.js"},{"name":"./lib/full-description","loc":{"line":3,"column":37},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/full-description.js"},{"name":"./lib/params","loc":{"line":4,"column":28},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/params.js"},{"name":"./lib/throws","loc":{"line":5,"column":28},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/throws.js"},{"name":"./lib/errors","loc":{"line":6,"column":28},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/errors.js"},{"name":"./lib/returns","loc":{"line":7,"column":29},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/returns.js"},{"name":"./lib/secrets","loc":{"line":8,"column":29},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/lib/secrets.js"},{"name":"./parse-directory","loc":{"line":40,"column":40},"parent":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/index.js","resolved":"/Users/yonathanloekito/Documents/hacktiv8/Phase2-2/mini-wp-1/client/node_modules/build-docs/parse-directory.js"}],"generated":{"js":"const commentsParser = require('comments-parser');\nconst parseDescription = require('./lib/description');\nconst parseFullDescription = require('./lib/full-description');\nconst parseParams = require('./lib/params');\nconst parseThrows = require('./lib/throws');\nconst buildErrors = require('./lib/errors');\nconst parseReturns = require('./lib/returns');\nconst parseSecrets = require('./lib/secrets');\n\nfunction getTags(parsed, t) {\n  return parsed.tags\n    .filter(tag => t.includes(tag.name))\n    .map(p => p.value);\n}\n\nfunction parseComment(comment, name) {\n  const throws = parseThrows(getTags(comment, ['throws', 'error']));\n  return {\n    name,\n    description: parseDescription(comment.lines[0]),\n    fullDescription: parseFullDescription(comment.lines),\n    params: parseParams(getTags(comment, ['param'])),\n    throws,\n    errors: buildErrors(throws),\n    secrets: parseSecrets(getTags(comment, ['secret'])),\n    returns: parseReturns(getTags(comment, ['returns'])),\n  };\n}\n\nmodule.exports = function extract(source, name = '') {\n  const parsed = commentsParser(source.toString());\n\n  if (!parsed[0]) {\n    return { name };\n  }\n\n  return parseComment(parsed[0], name);\n};\n\nmodule.exports.parseDirectory = require('./parse-directory');\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/build-docs/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/build-docs/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/build-docs/index.js":"const commentsParser = require('comments-parser');\nconst parseDescription = require('./lib/description');\nconst parseFullDescription = require('./lib/full-description');\nconst parseParams = require('./lib/params');\nconst parseThrows = require('./lib/throws');\nconst buildErrors = require('./lib/errors');\nconst parseReturns = require('./lib/returns');\nconst parseSecrets = require('./lib/secrets');\n\nfunction getTags(parsed, t) {\n  return parsed.tags\n    .filter(tag => t.includes(tag.name))\n    .map(p => p.value);\n}\n\nfunction parseComment(comment, name) {\n  const throws = parseThrows(getTags(comment, ['throws', 'error']));\n  return {\n    name,\n    description: parseDescription(comment.lines[0]),\n    fullDescription: parseFullDescription(comment.lines),\n    params: parseParams(getTags(comment, ['param'])),\n    throws,\n    errors: buildErrors(throws),\n    secrets: parseSecrets(getTags(comment, ['secret'])),\n    returns: parseReturns(getTags(comment, ['returns'])),\n  };\n}\n\nmodule.exports = function extract(source, name = '') {\n  const parsed = commentsParser(source.toString());\n\n  if (!parsed[0]) {\n    return { name };\n  }\n\n  return parseComment(parsed[0], name);\n};\n\nmodule.exports.parseDirectory = require('./parse-directory');\n"},"lineCount":41}},"error":null,"hash":"61a3ee0cef0742ff0b461fc80232fab1","cacheData":{"env":{}}}